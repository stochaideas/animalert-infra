name: Terraform CI/CD
on:
  #push:
    #branches:
     # - main
  workflow_dispatch:
permissions:
  id-token: write             # OIDC
  contents: read
  pull-requests: write        # so we can comment the plan

env:
  TF_IN_AUTOMATION: true
  TF_CLI_ARGS_init: -input=false
  TF_CLI_ARGS_apply: -auto-approve -input=false
  AWS_REGION: eu-central-1

jobs:
  terraform-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.x

      # Acquire short‑lived AWS creds via OIDC
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GithubTerraformReadonly
          aws-region: ${{ env.AWS_REGION }}

      # Formatting, lint, static analysis
      #- run: terraform fmt -check -recursive
      #- uses: terraform-linters/tflint-action@v2
      #- run: tfsec .

      # Basic validation
      - run: terraform init
      - run: terraform validate

      # Generate plan (saved to artifact + commented on PR)
      - run: terraform plan -out=plan.out -no-color
      - uses: actions/upload-artifact@v4
        with:
          name: tf-plan
          path: plan.out
      - uses: liatrio/terraform-change-pr-commenter@v1.4.0
        with:
          json-file: plan.json
          expand-comment: 'true'

  terraform-apply:
    needs: terraform-checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.x

      # Higher‑privilege deploy role
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GithubTerraform
          aws-region: ${{ env.AWS_REGION }}

      - run: terraform init
      - run: terraform plan -no-color      # Optional second plan for drift detect
      - run: terraform apply
